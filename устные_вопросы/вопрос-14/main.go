package main

import "fmt"

func main() {
	slice := []string{"a", "a"}
	func(slice []string) {
		slice = append(slice, "a")
		slice[0] = "b"
		slice[1] = "b"
		fmt.Print(slice)
	}(slice)
	fmt.Print(slice)
}

// Данная программа выведет [b b a] [a a].

// Внутри функции main создается срез slice с элементами "a", "a".
// Затем определяется анонимная функция, которая принимает срез slice как аргумент.

// Внутри анонимной функции происходят следующие изменения:

// Срезу slice с помощью append(slice, "a") добавляется элемент "a". Э
// то создает новый срез, который является копией исходного среза с добавленным элементом.
// Однако, этот новый срез нигде не сохраняется и не используется, поэтому его добавление не влияет на исходный срез.

// Элементам среза slice присваиваются значения "b", изменяя исходные значения "a".
// Таким образом, после этого шага срез slice содержит элементы "b", "b".

// Затем выводится значение среза slice внутри анонимной функции, и получаем [b b a].

// Далее, в функции main, выводится значение среза slice, который не был изменен после вызова анонимной функции. Поэтому выводится [a a].
